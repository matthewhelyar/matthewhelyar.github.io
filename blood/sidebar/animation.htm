<!DOCTYPE HTML>
<html>
<head>
	<style>
		:root {
			--animation-width: -260px;
			--grey1: #616161;
			--grey2: #777;
			--grey3: #9e9e9e;
			--grey4: #ccc;
		}

		body {
			margin: 0;
			background-color: lightgrey;
			font-family: Arial, Helvetica, sans-serif;
		}

		hr {
			margin: 5px;
			border: 0;
			border-top: 1px solid white;
			cursor: auto;
		}

		th {
			font-weight: 400;
		}

		.sidebar {
			display: block;
			position: fixed;
			height: 100%;
			background-color: var(--grey1);
			color: white;
			border: none;
			box-shadow: 0 4px 10px 0 rgba(0,0,0,0.2),0 4px 20px 0 rgba(0,0,0,0.19);
			font-family: Verdana, Geneva, Tahoma, sans-serif;
			animation: left 0.2s;
			overflow: auto;
			resize: horizontal;
			min-width: 230px;
			user-select: none;
		}

		.navOpen {
			position: sticky;
			top: 0px;
			z-index: 1;
			background-color: var(--grey2);
			color: white;
			float: right;
			height: 100%;
			cursor: pointer;
			text-align: center;
			vertical-align: middle;
			box-shadow: 0 4px 10px 0 rgba(0,0,0,0.2),0 4px 20px 0 rgba(0,0,0,0.19);
			user-select: none;
		}

		.navOpen:hover {
			background-color: var(--grey4);
			color: black;
			transition: 0.2s;
		}

		.sidebarContents {
			margin-right: 40px;
		}

		.sidebarButton {
			color: white;
			display: block;
			font-size: 11pt;
			line-height: 1.5;
			text-decoration: none;
			padding: 3px 6px;
			cursor: pointer;
			user-select: none;
		}

		.sidebarButton:hover {
			background-color: var(--grey4);
			color: black;
			transition: 0.2s;
		}

		.sidebarItemButton {
			border: 2px solid var(--grey1);
			margin: 3px 12px;
			text-align: center;
		}

		.caretDown {
			float: right;
			font-size: 8pt;
			padding: 3px 10px;
		}

		.caretDown::after {
			content: "\25BC";
		}

		.dropdownDiv {
			padding: 0 0 0 10px;
		}

		.dropdownDiv:hover {
			background-color: var(--grey4);
			color: black;
			transition: 0.2s;
		}

		.dropdownContents {
			position: relative;
			background-color: var(--grey3);
			color: black;
			box-shadow: 0 4px 10px 0 rgba(0,0,0,0.2),0 4px 20px 0 rgba(0,0,0,0.19);
			animation: left 0.2s;
		}

		.dropdownItem {
			display: block;
			font-size: 11pt;
			line-height: 1.5;
			text-decoration: none;
			color: black;
			padding: 3px 12px;
		}

		.dropdownItem:hover {
			background-color: var(--grey4);
			transition: 0.2s;
		}

		.sidebarInput {
			display: block;
			/*float: right;*/
			width: 100%;
			padding: 2px;
			margin: 0 2px;
			border-top: none;
			border-left: none;
			border-bottom: 2px solid var(--grey1);
			border-right: 2px solid var(--grey1);
			text-align: right;
			background-color: transparent;
			font-size: 11pt;
			font-weight: 700;
			font-family: Courier New, Courier, monospace;
			user-select: text;
		}

		.sidebarInput:focus {
			border-bottom: 2px solid white;
			border-right: 2px solid white;
			outline: none;
			transition: 0.2s
		}

		.sidebarSelect {
			display: block;
			/*float: right;*/
			width: 100%;
			padding: 2px;
			border-top: none;
			border-left: none;
			border-bottom: 2px solid var(--grey1);
			border-right: 2px solid var(--grey1);
			text-align: right;
			background-color: transparent;
			font-size: 11pt;
		}

		.sidebarSelect:focus {
			border-bottom: 2px solid white;
			border-right: 2px solid white;
			outline: none;
			transition: 0.2s
		}

		.sidebarDate {
			font-family: Verdana, Geneva, Tahoma, sans-serif;
			font-weight: 400;
			width: initial;
			display: inline;
		}

		#phenotypePopup {
			display: none;
			position: absolute;
			left: 50%;
			top: 50%;
			transform: translate(-50%, -50%);
			width: 50%;
			height: 500px;
			background-color: var(--grey1);
			border-radius: 10px;
			animation: fadeIn 0.25s;
			border: 5px solid var(--grey2);
			color: white;
		}

		.dragSelect {
			height: 350px;
			width: 100%;
		}

		span.sidebarInput:empty:before {
			content: "\200b"; /* unicode zero width space character*/
		}

		@keyframes left {
			from {
				left: var(--animation-width);
			}

			to {
				left: 0;
			}
		}

		@keyframes right {
			from {
				left: 0;
			}

			to {
				left: var(--animation-width);
			}
		}

		@keyframes fadeIn {
			0% {
				opacity: 0
			}

			100% {
				opacity: 1
			}
		}

		@keyframes zoomIn {
			from {
				transform: scale(0);
			}

			to {
				transform: scale(1);
			}
		}

		@page {
			size: A4 portrait;
			margin: 0mm;
		}

		@media print {
			.centerOnPrintedPageAbsolute {
				position: absolute;
				left: 50%;
				top: 50%;
				transform: translate(-50%, -50%);
			}

			.noPrint {
				display: none;
				width: 0;
				margin: 0;
				padding: 0;
			}

			body {
				background-color: none;
			}

			.main {
				margin-left: 0;
			}
		}
	</style>
</head>
<body>
	<div class="noPrint">
		<div id="sidebar" class="sidebar" style="left: 0px; width: 300px;">

			<div id="navOpenDiv" class="navOpen" style="width: 40px;" onclick="toggleSidebar(this.parentNode)">
				<span id="navOpen" style="font-size: 20pt; font-weight: 700; position: absolute; top: 50%; transform-origin:center; transform: translate(-50%, -50%);">&#9776;</span><!-- ☰˂˃˄˅‹› -->
			</div>

			<div id="sidebarHeadingDiv" style="padding: 5px 10px 0 15px; margin-right:40px; cursor:default; user-select:none;">
				<span id="sidebarHeading" style="font-weight: 400; font-size:14pt;">EDIT</span>
				<hr style="margin:0;" />
			</div>

			<div class="sidebarContents">

				<div class="dropdownDiv">
					<a class="sidebarButton" onclick="toggleDropdown(this.parentNode);">DIN <span class="caretDown" /></a>
					<div class="dropdownContents" style="display:none;">
						<div class="dropdownItem" onclick="this.children[1].focus()" style="padding-right:20px;">
							<label style="display: block; width: 100%; user-select: none;">Facility ID: </label>
							<input class="sidebarInput" id="fin" type="text" value="G000 0">
						</div>
						<div class="dropdownItem" onclick="this.children[1].focus()" style="padding-right:20px;">
							<label style="display: block; width: 100%; user-select: none;">Year: </label>
							<input class="sidebarInput" id="year" type="text" value="23">
						</div>
						<div class="dropdownItem" onclick="this.children[1].focus()" style="padding-right:20px;">
							<label style="display: block; width: 100%; user-select:none;">Sequence No: </label>
							<input class="sidebarInput" id="seq" type="text" value="000 000">
						</div>
					</div>
				</div>

				<div class="dropdownDiv">
					<a class="sidebarButton" onclick="toggleDropdown(this.parentNode);">Product <span class="caretDown" /></a>
					<div class="dropdownContents" style="display:none;">
						<div class="dropdownItem" onclick="this.children[1].focus()">
							<label style="display: block; width: 100%; user-select: none;">Component Type: </label>
							<select id="componentType" class="sidebarSelect">
								<option value="R">Red Cells</option>
								<option value="P">Platelets</option>
								<option value="F">Fresh Frozen Plasma</option>
								<option value="C">Cryoprecipitate</option>
								<option value="G">Granulocytes</option>
							</select>
						</div>

						<div class="dropdownItem" onclick="this.children[0].children[0].click()">
							<label style="display: block; width: 100%; user-select:none;">Irradiated: <input style="float:right;" id="available" type="checkbox"></label>
						</div>

						<div class="dropdownItem" onclick="this.children[0].children[0].click()">
							<label style="display: block; width: 100%; user-select:none;">Special: <input style="float:right;" id="available" type="checkbox"></label>
						</div>

						<div class="dropdownItem" onclick="this.children[0].children[0].click()">
							<label style="display: block; width: 100%; user-select:none;">Available: <input style="float:right;" id="available" type="checkbox"></label>
						</div>

						<hr />
						<a class="dropdownItem" href="javascript:void(0)">Product</a>
					</div>
				</div>

				<div class="dropdownDiv">
					<a class="sidebarButton" onclick="toggleDropdown(this.parentNode);">Group <span class="caretDown" /></a>
					<div class="dropdownContents" style="display:none;">
						<div class="dropdownItem" onclick="this.children[1].focus()">
							<label style="display: block; width: 100%; user-select: none;">ABO: </label>
							<select id="componentType" class="sidebarSelect">
								<option value="O">O</option>
								<option value="A">A</option>
								<option value="B">B</option>
								<option value="AB">AB</option>
							</select>
						</div>

						<div class="dropdownItem" onclick="this.children[1].focus()">
							<label style="display: block; width: 100%; user-select: none;">Rh: </label>
							<table style="width:100%; margin:0 auto; max-width: 250px; text-align:center;">
								<tr>
									<th>D</th>
									<th>C</th>
									<th>E</th>
									<th style="text-decoration:overline;">c</th>
									<th style="text-decoration:overline;">e</th>
								</tr>
								<tr>
									<td><input id="RhD" type="checkbox"></td>
									<td><input id="RhC" type="checkbox"></td>
									<td><input id="RhE" type="checkbox"></td>
									<td><input id="Rhc" type="checkbox" checked></td>
									<td><input id="Rhe" type="checkbox" checked></td>
								</tr>
							</table>
						</div>
					</div>
				</div>

				<div class="dropdownDiv">
					<a class="sidebarButton" onclick="toggleDropdown(this.parentNode);">Ext. Phenotypes <span class="caretDown" /></a>
					<div class="dropdownContents" style="display:none;">
						<div class="dropdownItem" onclick="this.children[1].focus()" style="padding-right:20px;">
							<label style="display: block; width: 100%; user-select:none;">Negative for: </label>
							<span class="sidebarInput" id="phNeg" style="text-align:left;" />
						</div>
						<div class="dropdownItem" onclick="this.children[1].focus()" style="padding-right:20px;">
							<label style="display: block; width: 100%; user-select:none;">Positive for: </label>
							<span class="sidebarInput" id="phPos" style="text-align:left;" />
						</div>
						<div class="dropdownItem" onclick="this.children[1].focus()" style="padding-right:20px;">
							<label style="display: block; width: 100%; user-select:none;">Untested: </label>
							<span class="sidebarInput" id="phUnk" style="text-align:left;" />
						</div>
						<div style="padding-bottom:3px;">
							<a class="sidebarButton sidebarItemButton" onclick="openPhenotypesForm();">Change</a>
						</div>
					</div>
				</div>


				<div class="dropdownDiv">
					<a class="sidebarButton" onclick="toggleDropdown(this.parentNode);">General Testing <span class="caretDown" /></a>
					<div class="dropdownContents" style="display:none;">
						<div class="dropdownItem">
							<table style="margin: 0 auto; width:100%; max-width:250px; text-align:center;">
								<tr>
									<th></th>
									<th>?</th>
									<th>+</th>
									<th>-</th>
								</tr>
								<tr>
									<td style="text-align:left;"><label for="CMV">CMV</label></td>
									<td><input name="CMV" type="radio" value="?" checked /></td>
									<td><input name="CMV" type="radio" value="+" /></td>
									<td><input name="CMV" type="radio" value="-" /></td>
								</tr>
								<tr>
									<td style="text-align:left;"><label for="HbS">HbS</label></td>
									<td><input name="HbS" type="radio" value="?" checked /></td>
									<td><input name="HbS" type="radio" value="+" /></td>
									<td><input name="HbS" type="radio" value="-" /></td>
								</tr>
								<tr>
									<td style="text-align:left;"><label for="IgA">IgA</label></td>
									<td><input name="IgA" type="radio" value="?" checked /></td>
									<td><input name="IgA" type="radio" value="+" /></td>
									<td><input name="IgA" type="radio" value="-" /></td>
								</tr>
								<tr>
									<td style="text-align:left;"><label for="HT">HT</label></td>
									<td><input name="HT" type="radio" value="?" checked /></td>
									<td><input name="HT" type="radio" value="+" /></td>
									<td><input name="HT" type="radio" value="-" /></td>
								</tr>
							</table>
						</div>
					</div>
				</div>

				<div class="dropdownDiv">
					<a class="sidebarButton" onclick="toggleDropdown(this.parentNode);">Dates <span class="caretDown" /></a>
					<div class="dropdownContents" style="display:none;">
						<div class="dropdownItem" style="padding-right:20px; ">
							<label style="display: block; width: 100%; user-select: none;">Collection: </label>
							<div style="text-align:right; ">
								<input type="date" id="collectionDate" class="sidebarInput sidebarDate" required=required />
								<input type="time" id="collectionTime" class="sidebarInput sidebarDate" required=required value="00:00" />
							</div>
						</div>
						<div class="dropdownItem" style="padding-right:20px;">
							<label style="display: block; width: 100%; user-select: none;">Expiry: </label>
							<div style="text-align:right; ">
								<input type="date" id="expiryDate" class="sidebarInput sidebarDate" required=required />
								<input type="time" id="expiryTime" class="sidebarInput sidebarDate" required=required value="23:59" />
							</div>
						</div>
					</div>
				</div>

				<div class="dropdownDiv">
					<hr />
					<a class="sidebarButton" href="javascript:void(0)">Help</a>
				</div>
			</div>
		</div>
	</div>


	<div id="phenotypePopup">
		<div style="margin: 10px 20px; user-select:none;">
			<span style="display: block;  font-weight: 400; font-size:14pt; padding: 0px 10px">Add/Remove Red Cell Antigens</span>
			<hr style="margin: 10px;" />
			<span>Drag to move antigens</span>
			<form>
				<table style="width:100%; height:100%;">
					<tr>
						<th>Unknown:</th>
						<th>Negative for:</th>
						<th>Positive for:</th>
					</tr>
					<tr>
						<td style="width:33%">
							<select class="dragSelect" size="2" id="phenUnk"
									onfocus="clearSelect('phenNeg'); clearSelect('phenPos');" />
						</td>
						<td style="width:33%">
							<select class="dragSelect" size="2" id="phenNeg"
									onfocus="clearSelect('phenUnk'); clearSelect('phenPos');" style="background-color:#cfc;" />
						</td>
						<td style="width:33%">
							<select class="dragSelect" size="2" id="phenPos"
									onfocus="clearSelect('phenUnk'); clearSelect('phenNeg');" style="background-color:#fcc;" />
						</td>
					</tr>
				</table>
				<div style="height:100%; text-align:right;">
					<button style="width:100px;" type="reset" onclick="resetPhenotypesForm();">Cancel</button>
					<button style="width:100px;" type="button" onclick="submitPhenotypeForm();">Accept</button>
				</div>
			</form>
		</div>

	</div>

	<div id="main">
		<div class="centerOnPrintedPageAbsolute" style="text-align:center; padding:5px">
			<img src="../TransitionLabel.svg" />
			<!-- Replace <img> with inline <svg> element for final version. (N.B. <img> svg doesn't act the same as <svg>') e.g. -->
			<!--<svg width="138.62802mm" height="246.4087mm" viewBox="0 0 138.62803 246.4087" style="background-color:red; border:5px solid black;" />-->
		</div>
	</div>

	<script type="text/javascript">


		let phenotypes = { unk: ['M', 'N', 'S', 's', 'K', 'k', 'Lea', 'Leb', 'Fya', 'Fyb', 'Jka', 'Jkb', 'Cw', 'Mia', 'U', 'P1', 'Lua', 'Kpa', 'Doa', 'Dob', 'Ina', 'Cob', 'Dia', 'VS/V', 'Jsa'], pos: [], neg: [] };

		(function init() {
			writePhenotypeToSidebar('phUnk', phenotypes.unk);
			writePhenotypeToSidebar('phPos', phenotypes.pos);
			writePhenotypeToSidebar('phNeg', phenotypes.neg);

			for (let d of document.querySelectorAll(".draggableOption")) {
				d.addEventListener('dragstart', dragStart);
			}

			for (let d of document.querySelectorAll(".dragSelect")) {
				d.addEventListener('drop', dropSelect);
				d.addEventListener('dragenter', (e) => { e.preventDefault(); });
				d.addEventListener('dragover', (e) => { e.preventDefault(); });
				d.addEventListener('dragleave', (e) => { });
			}
		})();

		function dragStart(e) {
			e.dataTransfer.setData('text/plain', e.target.id);
		}

		function dropSelect(e) {
			const id = e.dataTransfer.getData('text/plain');
			if (id == "") return;

			const draggable = document.getElementById(id);
			if (!draggable) return;

			let select;
			switch (e.target.tagName) {
				case "SELECT":
					select = e.target;
					break;
				case "OPTION":
					select = e.target.parentNode;
					break;
				default:
					return;
			}

			// insert alphabetically
			let i = 0;
			while (i < select.options.length && alphabeticCaseSort(draggable.text, select.options[i].text) == 1)
				i++;

			select.add(draggable, select.options[i]);

		}

		function writePhenotypeToSidebar(sidebarElementId, array) {
			const el = document.getElementById(sidebarElementId);
			el.textContent = "";
			for (let i = 0; i < array.length; i++) {
				el.textContent += array[i];
				if (i != array.length - 1)
					el.textContent += ", ";
			}
		}

		function savePhenotypeFromForm(selectId, array) {
			for (let p of document.getElementById(selectId).options)
				array.push(p.value);
		}

		function submitPhenotypeForm() {
			phenotypes = { unk: [], pos: [], neg: [] };
			savePhenotypeFromForm('phenUnk', phenotypes.unk);
			savePhenotypeFromForm('phenPos', phenotypes.pos);
			savePhenotypeFromForm('phenNeg', phenotypes.neg);

			writePhenotypeToSidebar('phUnk', phenotypes.unk);
			writePhenotypeToSidebar('phPos', phenotypes.pos);
			writePhenotypeToSidebar('phNeg', phenotypes.neg);

			document.getElementById("phenotypePopup").style.display = "none";
		}

		function alphabeticCaseSort(x, y) {
			// sort alphabetically accounting for case.
			if (x === y) return 0;
			if (x.toUpperCase() == y.toUpperCase) {
				if (x < y) return -1;
				if (x > y) return 1;
			}
			if (x.toUpperCase() < y.toUpperCase()) return -1;
			if (x.toUpperCase() > y.toUpperCase()) return 1;
			return 0;
		}

		function resetPhenotypesForm() {
			function writeToForm(selectId, array) {
				let select = document.getElementById(selectId);
				select.options.length = 0;
				array = array.sort(alphabeticCaseSort);
				for (let o of array) {
					let option = document.createElement('option');
					option.id = "phenOption_" + o;
					option.text = o;
					option.classList.add("draggableOption");
					option.draggable = "true";
					option.addEventListener('dragstart', dragStart);
					select.appendChild(option);
				}
			}

			writeToForm('phenUnk', phenotypes.unk);
			writeToForm('phenPos', phenotypes.pos);
			writeToForm('phenNeg', phenotypes.neg);

			document.getElementById("phenotypePopup").style.display = "none";
		}

		function openPhenotypesForm() {
			if (getComputedStyle(document.getElementById("phenotypePopup")).getPropertyValue('display') != "none") return;
			resetPhenotypesForm();
			document.getElementById("phenotypePopup").style.display = "block";
		}

		function toggleSidebar(sidebar) {
			const t = event.target.getAttribute("id");
			if (t != "navOpenDiv" && t != "navOpen" && t != "sidebarHeading")
				return;

			const scrollbarWidth = sidebar.offsetWidth - sidebar.clientWidth;
			const sidebarWidth = parseInt(sidebar.style.width);
			const handleWidth = parseInt(document.querySelector("#navOpenDiv").style.width);
			const finalWidth = sidebarWidth - handleWidth - scrollbarWidth;
			document.documentElement.style.setProperty('--animation-width', `-${finalWidth}px`);


			if (sidebar.style.left == "0px") {
				sidebar.style.animation = "right 0.2s";
				sidebar.style.left = `-${finalWidth}px`;
				sidebar.style.resize = "none";
			}
			else {
				sidebar.style.animation = "left 0.2s";
				sidebar.style.left = "0";
				sidebar.style.resize = "horizontal";
			}
		}

		function toggleDropdown(dropdownDiv, hideOtherDropdowns = false) {
			const dropdown = dropdownDiv.querySelector(":scope > .dropdownContents");
			if (!dropdown) return;
			dropdown.style.display = (dropdown.style.display == "none") ? "block" : "none";
		}

		function getSelectValues(select) {
			if (!select || !select.options) return;
			let result = [];
			for (let opt of select.options)
				if (opt.selected)
					result.push(opt.value);
			return result;
		}

		function clearSelect(selectId) {
			const select = document.getElementById(selectId);
			if (!select || !select.options) return;
			for (let opt of select.options)
				opt.selected = false;
		}
	</script>
</body>
</html>